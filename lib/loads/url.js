// Generated by CoffeeScript 1.3.3
(function() {
  var path, request, url, _,
    __slice = [].slice;

  url = require('url');

  request = require('request');

  _ = require('underscore');

  path = require('path');

  module.exports = function() {
    return [
      "url", 10, function() {
        var args, fobj, href, next, up, _i, _ref,
          _this = this;
        args = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), next = arguments[_i++];
        href = args[0];
        if (!(_.isString(href) || _.isObject(href))) {
          return next();
        }
        if (_.isObject(href)) {
          if (!href.url) {
            return next();
          } else {
            _ref = [href, href.url], fobj = _ref[0], href = _ref[1];
          }
        } else {
          fobj = {
            url: href
          };
        }
        up = url.parse(href);
        if (!(up.protocol && up.host)) {
          return next();
        }
        return request.get({
          url: up
        }, function(err, res, body) {
          var name, _ref1;
          try {
            if (err || !body) {
              return next();
            }
            name = (_ref1 = fobj.name) != null ? _ref1 : path.basename(up.pathname);
            if (!name) {
              return next(new Error("" + href + " was loaded successfully but a name couldn't be rendered. Try using an object with a name key."));
            }
            _.defaults(fobj, {
              name: name,
              content: new Buffer(body)
            });
            return _this.exec_load("compile", fobj, next);
          } catch (e) {
            return next(e);
          }
        });
      }
    ];
  };

}).call(this);
