// Generated by CoffeeScript 1.3.3
(function() {
  var Asset, AssetReference, alib, _,
    __slice = [].slice;

  _ = require('underscore');

  alib = require('../asset');

  Asset = alib.Asset;

  AssetReference = alib.AssetReference;

  module.exports = function() {
    return [
      "validate", 1, function() {
        var args, next, obj, ref, storage, _i, _ref, _ref1;
        args = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), next = arguments[_i++];
        obj = args[0];
        if (obj instanceof Asset) {
          return next(obj);
        }
        if (!_.isObject(obj)) {
          return next();
        }
        if (obj instanceof AssetReference) {
          ref = obj;
        } else if (_.isObject(obj._refs)) {
          storage = (_ref = obj._storage) != null ? _ref : this.options.default_store;
          ref = new AssetReference(obj._refs, storage);
          ref._manager = this;
          ref.url = (_ref1 = obj.url) != null ? _ref1 : null;
        } else if (obj.content && obj.name) {
          return this.exec_load("compile", obj, next);
        }
        if (ref) {
          return ref.toAsset(function(err, asset) {
            if (err) {
              return next(err);
            } else if (!asset) {
              return next(new Error("Load assumed reference and an Asset could not be found."));
            } else {
              return next(asset);
            }
          });
        }
      }
    ];
  };

}).call(this);
